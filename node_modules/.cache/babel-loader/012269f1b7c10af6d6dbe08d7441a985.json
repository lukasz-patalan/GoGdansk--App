{"ast":null,"code":"import _slicedToArray from \"/home/lukasz/Desktop/jfdd12-begio-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMyEvents } from \"../services/UsersEventService\";\nimport { useEvents } from \"./useEvents\";\nimport { useAuth } from \"../hooks/useAuth\";\nexport const useMyEvents = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        myEvents = _useState2[0],\n        setMyEvents = _useState2[1];\n\n  const events = useEvents();\n  const loggedUser = useAuth();\n  const uid = loggedUser && loggedUser.uid;\n  useEffect(() => {\n    if (uid) {\n      const EventsRef = fetchMyEvents(myEventsIds => {\n        const myEvents = events.filter(event => myEventsIds.includes(event.id));\n        setMyEvents(myEvents);\n      }, uid);\n      return () => {\n        EventsRef.off(\"value\");\n      };\n    }\n  }, [events, uid]);\n  return myEvents;\n};","map":{"version":3,"sources":["/home/lukasz/Desktop/jfdd12-begio-app/src/hooks/useMyEvents.js"],"names":["useState","useEffect","fetchMyEvents","useEvents","useAuth","useMyEvents","myEvents","setMyEvents","events","loggedUser","uid","EventsRef","myEventsIds","filter","event","includes","id","off"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACGL,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,QACtBM,QADsB;AAAA,QACZC,WADY;;AAE7B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,UAAU,GAAGL,OAAO,EAA1B;AACA,QAAMM,GAAG,GAAGD,UAAU,IAAIA,UAAU,CAACC,GAArC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,GAAJ,EAAS;AACL,YAAMC,SAAS,GAAGT,aAAa,CAACU,WAAW,IAAI;AAC3C,cAAMN,QAAQ,GAAGE,MAAM,CAACK,MAAP,CAAcC,KAAK,IAChCF,WAAW,CAACG,QAAZ,CAAqBD,KAAK,CAACE,EAA3B,CADa,CAAjB;AAGAT,QAAAA,WAAW,CAACD,QAAD,CAAX;AACH,OAL8B,EAK5BI,GAL4B,CAA/B;AAOA,aAAO,MAAM;AACTC,QAAAA,SAAS,CAACM,GAAV,CAAc,OAAd;AACH,OAFD;AAGH;AACJ,GAbQ,EAaN,CAACT,MAAD,EAASE,GAAT,CAbM,CAAT;AAeA,SAAOJ,QAAP;AACH,CAtBM","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { fetchMyEvents } from \"../services/UsersEventService\"\nimport { useEvents } from \"./useEvents\"\nimport { useAuth } from \"../hooks/useAuth\"\n\nexport const useMyEvents = () => {\n    const [myEvents, setMyEvents] = useState([])\n    const events = useEvents()\n    const loggedUser = useAuth()\n    const uid = loggedUser && loggedUser.uid\n\n    useEffect(() => {\n        if (uid) {\n            const EventsRef = fetchMyEvents(myEventsIds => {\n                const myEvents = events.filter(event =>\n                    myEventsIds.includes(event.id)\n                )\n                setMyEvents(myEvents)\n            }, uid)\n\n            return () => {\n                EventsRef.off(\"value\")\n            }\n        }\n    }, [events, uid])\n\n    return myEvents\n}\n"]},"metadata":{},"sourceType":"module"}