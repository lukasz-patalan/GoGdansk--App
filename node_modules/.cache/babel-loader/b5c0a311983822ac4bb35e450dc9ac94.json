{"ast":null,"code":"var _jsxFileName = \"/home/lukasz/Desktop/jfdd12-begio-app/src/components/Calendar/Calendar.js\";\nimport React from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"moment/locale/pl\";\nimport \"./Calendar.css\";\nconst localizer = momentLocalizer(moment);\n\nfunction EventsCalendar(props) {\n  const state = {\n    scroll: new Date()\n  };\n  const myEvents = props.myEvents;\n  const currentUserEvents = myEvents.map(event => Object.assign({}, {\n    title: event.title,\n    start: new Date(event.startDate.year, event.startDate.month - 1, event.startDate.day, event.startDate.time.hour, event.startDate.time.minute),\n    end: new Date(event.endDate.year, event.endDate.month - 1, event.endDate.day, event.endDate.time.hour, event.endDate.time.minute)\n  }));\n  return React.createElement(\"div\", {\n    className: \"calendarWithEvents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Calendar, {\n    localizer: localizer,\n    events: currentUserEvents,\n    views: {\n      month: true,\n      day: true\n    },\n    scrollToTime: state.scroll,\n    eventPropGetter: () => ({\n      style: {\n        backgroundColor: \"#49406dce\",\n        cursor: \"auto\"\n      }\n    }),\n    messages: {\n      next: \">>\",\n      previous: \"<<\",\n      today: \"Dziś\",\n      month: \"Miesiąc\",\n      day: \"Dzień\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}\n\nexport default EventsCalendar;","map":{"version":3,"sources":["/home/lukasz/Desktop/jfdd12-begio-app/src/components/Calendar/Calendar.js"],"names":["React","Calendar","momentLocalizer","moment","localizer","EventsCalendar","props","state","scroll","Date","myEvents","currentUserEvents","map","event","Object","assign","title","start","startDate","year","month","day","time","hour","minute","end","endDate","style","backgroundColor","cursor","next","previous","today"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AACA,OAAO,kBAAP;AACA,OAAO,gBAAP;AAEA,MAAMC,SAAS,GAAGF,eAAe,CAACC,MAAD,CAAjC;;AAGA,SAASE,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,KAAK,GAAG;AAAEC,IAAAA,MAAM,EAAE,IAAIC,IAAJ;AAAV,GAAd;AAD6B,QAErBC,QAFqB,GAERJ,KAFQ,CAErBI,QAFqB;AAG7B,QAAMC,iBAAiB,GAAGD,QAAQ,CAC/BE,GADuB,CACnBC,KAAK,IACRC,MAAM,CAACC,MAAP,CACE,EADF,EAEE;AACEC,IAAAA,KAAK,EAAEH,KAAK,CAACG,KADf;AAEEC,IAAAA,KAAK,EAAE,IAAIR,IAAJ,CACLI,KAAK,CAACK,SAAN,CAAgBC,IADX,EAELN,KAAK,CAACK,SAAN,CAAgBE,KAAhB,GAAwB,CAFnB,EAGLP,KAAK,CAACK,SAAN,CAAgBG,GAHX,EAILR,KAAK,CAACK,SAAN,CAAgBI,IAAhB,CAAqBC,IAJhB,EAKLV,KAAK,CAACK,SAAN,CAAgBI,IAAhB,CAAqBE,MALhB,CAFT;AASEC,IAAAA,GAAG,EAAE,IAAIhB,IAAJ,CACHI,KAAK,CAACa,OAAN,CAAcP,IADX,EAEHN,KAAK,CAACa,OAAN,CAAcN,KAAd,GAAsB,CAFnB,EAGHP,KAAK,CAACa,OAAN,CAAcL,GAHX,EAIHR,KAAK,CAACa,OAAN,CAAcJ,IAAd,CAAmBC,IAJhB,EAKHV,KAAK,CAACa,OAAN,CAAcJ,IAAd,CAAmBE,MALhB;AATP,GAFF,CAFsB,CAA1B;AAuBA,SACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAEpB,SADb;AAEE,IAAA,MAAM,EAAEO,iBAFV;AAGE,IAAA,KAAK,EAAE;AACLS,MAAAA,KAAK,EAAE,IADF;AAELC,MAAAA,GAAG,EAAE;AAFA,KAHT;AAOE,IAAA,YAAY,EAAEd,KAAK,CAACC,MAPtB;AAQE,IAAA,eAAe,EAAE,OAAO;AACtBmB,MAAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,WAAnB;AAAgCC,QAAAA,MAAM,EAAE;AAAxC;AADe,KAAP,CARnB;AAWE,IAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,QAAQ,EAAE,IAFF;AAGRC,MAAAA,KAAK,EAAE,MAHC;AAIRZ,MAAAA,KAAK,EAAE,SAJC;AAKRC,MAAAA,GAAG,EAAE;AALG,KAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAuBD;;AAED,eAAehB,cAAf","sourcesContent":["import React from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"moment/locale/pl\";\nimport \"./Calendar.css\"\n\nconst localizer = momentLocalizer(moment);\n\n\nfunction EventsCalendar(props) {\n  const state = { scroll: new Date() }\n  const { myEvents } = props;\n  const currentUserEvents = myEvents\n    .map(event =>\n      Object.assign(\n        {},\n        {\n          title: event.title,\n          start: new Date(\n            event.startDate.year,\n            event.startDate.month - 1,\n            event.startDate.day,\n            event.startDate.time.hour,\n            event.startDate.time.minute\n          ),\n          end: new Date(\n            event.endDate.year,\n            event.endDate.month - 1,\n            event.endDate.day,\n            event.endDate.time.hour,\n            event.endDate.time.minute\n          )\n        }\n      )\n    );\n  return (\n    <div className=\"calendarWithEvents\">\n      <Calendar\n        localizer={localizer}\n        events={currentUserEvents}\n        views={{\n          month: true,\n          day: true\n        }}\n        scrollToTime={state.scroll}\n        eventPropGetter={() => ({\n          style: { backgroundColor: \"#49406dce\", cursor: \"auto\" }\n        })}\n        messages={{\n          next: \">>\",\n          previous: \"<<\",\n          today: \"Dziś\",\n          month: \"Miesiąc\",\n          day: \"Dzień\"\n        }}\n      />\n    </div>\n  );\n}\n\nexport default EventsCalendar;\n"]},"metadata":{},"sourceType":"module"}