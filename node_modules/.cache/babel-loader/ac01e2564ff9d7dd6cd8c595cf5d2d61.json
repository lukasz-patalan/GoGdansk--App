{"ast":null,"code":"import _slicedToArray from \"/home/lukasz/Desktop/jfdd12-begio-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lukasz/Desktop/jfdd12-begio-app/src/components/MapView.js\";\nimport React, { useState } from \"react\";\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport { MarkerClusterer } from \"react-google-maps/lib/components/addons/MarkerClusterer\";\nimport { NavLink } from \"react-router-dom\";\nimport EventView from \"../components/EventView\";\nimport deny from \"../assets/deny.png\";\nimport Modal from \"react-modal\";\nimport { InfoWindowView } from \"./InfoWindowView\";\nimport { LocationConsumer } from \"../contexts/LocationContext\";\nimport { useAuth } from \"../hooks/useAuth.js\";\nimport mapstyles from \"./mapstyles\";\nModal.setAppElement(\"#root\");\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showEventDetails: false\n    };\n\n    this.toggleEventDetails = () => {\n      this.setState({\n        showEventDetails: !this.state.showEventDetails\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(LocationConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, value => React.createElement(GoogleMap, {\n      onClick: () => {\n        value.setSelectedEvent(null);\n      },\n      options: {\n        mapTypeControl: false,\n        fullscreenControl: false,\n        streetViewControl: false,\n        showingInfoWindow: true,\n        minZoom: 13,\n        styles: mapstyles\n      },\n      defaultZoom: 13,\n      defaultCenter: {\n        lat: 54.369398,\n        lng: 18.594568\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(MarkerClusterer, {\n      enableRetinaIcons: true,\n      gridSize: 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.events.map((event, index) => React.createElement(LocationConsumer, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, value => React.createElement(Marker, {\n      key: event.id,\n      position: {\n        lat: event.address.location.lat,\n        lng: event.address.location.lng\n      },\n      onClick: () => {\n        value.setSelectedEvent(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(LocationConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, value => {\n      return value.selectedEvent && React.createElement(InfoWindow, {\n        position: {\n          lat: value.selectedEvent.address.location.lat,\n          lng: value.selectedEvent.address.location.lng\n        },\n        onCloseClick: () => {\n          value.setSelectedEvent(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(InfoWindowView, {\n        addMyEvent: this.props.addMyEvent,\n        removeMyEvent: this.props.removeMyEvent,\n        myEvents: this.props.myEvents,\n        event: value.selectedEvent,\n        toggleEventDetails: this.toggleEventDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    })))), this.state.showEventDetails && React.createElement(Modal, {\n      style: {\n        overlay: {\n          zIndex: 10,\n          backgroundColor: \"rgba(192,192,192, 0.75)\"\n        },\n        content: {\n          width: \"80%\",\n          height: \"80%\",\n          position: \"absolute\",\n          margin: \"auto\",\n          border: \"1px solid #ccc\",\n          background: \"#fff\",\n          overflow: \"auto\",\n          WebkitOverflowScrolling: \"touch\",\n          borderRadius: \"4px\",\n          outline: \"none\",\n          padding: \"20px\"\n        }\n      },\n      isOpen: this.state.showEventDetails,\n      onRequestClose: this.toggleEventDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        padding: \"10px\",\n        cursor: \"pointer\",\n        float: \"right\",\n        borderRadius: \"8px\",\n        color: \"white\",\n        border: \"none\",\n        background: \"rgb(68, 66, 105)\"\n      },\n      onClick: this.toggleEventDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"x\"), React.createElement(LocationConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, value => {\n      return React.createElement(EventView, {\n        addMyEvent: this.props.addMyEvent,\n        removeMyEvent: this.props.removeMyEvent,\n        myEvents: this.props.myEvents,\n        event: value.selectedEvent,\n        toggleEventDetails: this.toggleEventDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport function MapView(props) {\n  const _useState = useState(\"open\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const closeLogOutMessage = () => {\n    setMessage(\"closed\");\n  };\n\n  const loggedUser = useAuth();\n  return React.createElement(\"div\", {\n    style: {\n      flexBasis: \"50%\",\n      height: \"85vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, loggedUser || message === \"closed\" ? null : React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      marginTop: \"10px\",\n      zIndex: 2,\n      marginLeft: \"10px\",\n      padding: \"18px\",\n      background: \"rgb(177, 177, 241)\",\n      borderRadius: \"0 15px 15px 15px\",\n      width: \"300px\",\n      fontSize: \"16px\",\n      color: \"white\",\n      marginBottom: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: closeLogOutMessage,\n    style: {\n      borderRadius: \"5px\",\n      color: \"rgb(73, 64, 109)\",\n      float: \"right\",\n      background: \"white\",\n      border: \"none\",\n      padding: \"3px 7px\",\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"x\"), React.createElement(\"img\", {\n    alt: \"deny\",\n    style: {\n      width: \"8%\"\n    },\n    src: deny,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }), \"Aby dodawa\\u0107 wydarzenia do Twojej listy,\", \" \", React.createElement(NavLink, {\n    style: {\n      color: \"white\",\n      fontWeight: \"bold\"\n    },\n    to: \"/login\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"zaloguj si\\u0119\")), React.createElement(WrappedMap, Object.assign({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBjbSX619TpTJBp9afQKJUuueKAF9ZGawc\",\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  })));\n}\nexport function DivOnMap(props) {\n  return React.createElement(\"div\", {\n    style: {\n      width: \"50%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(Map, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/lukasz/Desktop/jfdd12-begio-app/src/components/MapView.js"],"names":["React","useState","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","MarkerClusterer","NavLink","EventView","deny","Modal","InfoWindowView","LocationConsumer","useAuth","mapstyles","setAppElement","Map","Component","state","showEventDetails","toggleEventDetails","setState","render","value","setSelectedEvent","mapTypeControl","fullscreenControl","streetViewControl","showingInfoWindow","minZoom","styles","lat","lng","props","events","map","event","index","id","address","location","selectedEvent","addMyEvent","removeMyEvent","myEvents","overlay","zIndex","backgroundColor","content","width","height","position","margin","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","cursor","float","color","WrappedMap","MapView","message","setMessage","closeLogOutMessage","loggedUser","flexBasis","marginTop","marginLeft","fontSize","marginBottom","fontWeight","DivOnMap"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker,\n    InfoWindow\n} from \"react-google-maps\"\nimport { MarkerClusterer } from \"react-google-maps/lib/components/addons/MarkerClusterer\"\nimport { NavLink } from \"react-router-dom\"\nimport EventView from \"../components/EventView\"\nimport deny from \"../assets/deny.png\"\nimport Modal from \"react-modal\"\nimport { InfoWindowView } from \"./InfoWindowView\"\nimport { LocationConsumer } from \"../contexts/LocationContext\"\nimport { useAuth } from \"../hooks/useAuth.js\"\nimport mapstyles from \"./mapstyles\"\nModal.setAppElement(\"#root\")\nclass Map extends React.Component {\n    state = {\n        showEventDetails: false\n    }\n\n    toggleEventDetails = () => {\n        this.setState({\n            showEventDetails: !this.state.showEventDetails\n        })\n    }\n    render() {\n        return (\n            <div>\n                <LocationConsumer>\n                    {value => (\n                        <GoogleMap\n                            onClick={() => {\n                                value.setSelectedEvent(null)\n                            }}\n                            options={{\n\n                                mapTypeControl: false,\n                                fullscreenControl: false,\n                                streetViewControl: false,\n                                showingInfoWindow: true,\n                                minZoom: 13,\n                                styles: mapstyles\n                            }}\n                            defaultZoom={13}\n                            defaultCenter={{ lat: 54.369398, lng: 18.594568 }}\n                        >\n                            <MarkerClusterer enableRetinaIcons gridSize={40}>\n                                {this.props.events.map((event, index) => (\n                                    <LocationConsumer key={index}>\n                                        {value => (\n                                            <Marker\n                                                key={event.id}\n                                                position={{\n                                                    lat:\n                                                        event.address.location\n                                                            .lat,\n                                                    lng:\n                                                        event.address.location\n                                                            .lng\n                                                }}\n                                                onClick={() => {\n                                                    value.setSelectedEvent(\n                                                        event\n                                                    )\n                                                }}\n                                            />\n                                        )}\n                                    </LocationConsumer>\n                                ))}\n\n                                <LocationConsumer>\n                                    {value => {\n                                        return (\n                                            value.selectedEvent && (\n                                                <InfoWindow\n                                                    position={{\n                                                        lat:\n                                                            value.selectedEvent\n                                                                .address\n                                                                .location.lat,\n                                                        lng:\n                                                            value.selectedEvent\n                                                                .address\n                                                                .location.lng\n                                                    }}\n                                                    onCloseClick={() => {\n                                                        value.setSelectedEvent(\n                                                            null\n                                                        )\n                                                    }}\n                                                >\n                                                    <InfoWindowView\n                                                        addMyEvent={\n                                                            this.props\n                                                                .addMyEvent\n                                                        }\n                                                        removeMyEvent={\n                                                            this.props\n                                                                .removeMyEvent\n                                                        }\n                                                        myEvents={\n                                                            this.props.myEvents\n                                                        }\n                                                        event={\n                                                            value.selectedEvent\n                                                        }\n                                                        toggleEventDetails={\n                                                            this\n                                                                .toggleEventDetails\n                                                        }\n                                                    />\n                                                </InfoWindow>\n                                            )\n                                        )\n                                    }}\n                                </LocationConsumer>\n                            </MarkerClusterer>\n                        </GoogleMap>\n                    )}\n                </LocationConsumer>\n                {this.state.showEventDetails && (\n                    <Modal\n                        style={{\n                            overlay: {\n                                zIndex: 10,\n                                backgroundColor: \"rgba(192,192,192, 0.75)\"\n                            },\n                            content: {\n                                width: \"80%\",\n                                height: \"80%\",\n                                position: \"absolute\",\n                                margin: \"auto\",\n                                border: \"1px solid #ccc\",\n                                background: \"#fff\",\n                                overflow: \"auto\",\n                                WebkitOverflowScrolling: \"touch\",\n                                borderRadius: \"4px\",\n                                outline: \"none\",\n                                padding: \"20px\"\n                            }\n                        }}\n                        isOpen={this.state.showEventDetails}\n                        onRequestClose={this.toggleEventDetails}\n                    >\n                        <button\n                            style={{\n                                padding: \"10px\",\n                                cursor: \"pointer\",\n                                float: \"right\",\n                                borderRadius: \"8px\",\n                                color: \"white\",\n                                border: \"none\",\n                                background: \"rgb(68, 66, 105)\"\n                            }}\n                            onClick={this.toggleEventDetails}\n                        >\n                            x\n                        </button>\n                        <LocationConsumer>\n                            {value => {\n                                return (\n                                    <EventView\n                                        addMyEvent={this.props.addMyEvent}\n                                        removeMyEvent={this.props.removeMyEvent}\n                                        myEvents={this.props.myEvents}\n                                        event={value.selectedEvent}\n                                        toggleEventDetails={\n                                            this.toggleEventDetails\n                                        }\n                                    />\n                                )\n                            }}\n                        </LocationConsumer>\n                    </Modal>\n                )}\n            </div>\n        )\n    }\n}\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\nexport function MapView(props) {\n    const [message, setMessage] = useState(\"open\")\n\n    const closeLogOutMessage = () => {\n        setMessage(\"closed\")\n    }\n    const loggedUser = useAuth()\n    return (\n        <div style={{ flexBasis: \"50%\", height: \"85vh\" }}>\n            {loggedUser || message === \"closed\" ? null : (\n                <div\n                    style={{\n                        position: \"fixed\",\n                        marginTop: \"10px\",\n                        zIndex: 2,\n                        marginLeft: \"10px\",\n                        padding: \"18px\",\n                        background: \"rgb(177, 177, 241)\",\n                        borderRadius: \"0 15px 15px 15px\",\n                        width: \"300px\",\n                        fontSize: \"16px\",\n                        color: \"white\",\n                        marginBottom: \"10px\"\n                    }}\n                >\n                    <button\n                        onClick={closeLogOutMessage}\n                        style={{\n                            borderRadius: \"5px\",\n                            color: \"rgb(73, 64, 109)\",\n                            float: \"right\",\n                            background: \"white\",\n                            border: \"none\",\n                            padding: \"3px 7px\",\n                            cursor: \"pointer\"\n                        }}\n                    >\n                        x\n                    </button>\n                    <img alt=\"deny\" style={{ width: \"8%\" }} src={deny} />\n                    Aby dodawać wydarzenia do Twojej listy,{\" \"}\n                    <NavLink\n                        style={{ color: \"white\", fontWeight: \"bold\" }}\n                        to=\"/login\"\n                        exact\n                    >\n                        zaloguj się\n                    </NavLink>\n                </div>\n            )}\n            <WrappedMap\n                googleMapURL={\n                    \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBjbSX619TpTJBp9afQKJUuueKAF9ZGawc\"\n                }\n                loadingElement={<div style={{ height: \"100%\" }} />}\n                containerElement={<div style={{ height: \"100%\" }} />}\n                mapElement={<div style={{ height: \"100%\" }} />}\n                {...props}\n            />\n        </div>\n    )\n}\nexport function DivOnMap(props) {\n    return (\n        <div style={{ width: \"50%\" }}>\n            <Map\n\n                {...props}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}